{% extends "base.jinja" %}

{% block style %}

{% endblock %}

{% block body %}
    <p>BLE address: {{ tskin.config.address }}</p>
    <p>BLE status: <span class="badge rounded-pill" id="conn_status"></span></p>
    <div class="d-flex gap-3">
        <div class="d-flex flex-column gap-3">
            <div class="card flex-fill">
                <div class="card-header">Streaming</div>
                <div class="card-body">
                    <table class="table table-borderless">
                        <thead>
                            <tr>
                                <th>Roll</th>
                                <th>Pitch</th>
                                <th>Yaw</th>
                                <th>Batt.</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td id="roll"></td>
                                <td id="pitch"></td>
                                <td id="yaw"></td>
                                <td id="batt"></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class="card flex-fill">
            <div class="card-header">Touchpad</div>
            <div class="card-body d-flex flex-column" id="tskin-touch" style="height: 400px;overflow-y: scroll;">
            
            </div>
        </div>
        <div class="card flex-fill">
            <div class="card-header">Gesture</div>
            <div class="card-body d-flex flex-column" id="tskin-gesture" style="height: 400px;overflow-y: scroll;">
            
            </div>
        </div>
    </div>
{% endblock %}

{% block script %}
<script>
    const conn_status = $("#conn_status");
    const test_button = $(".test-button");
    const roll = $("#roll");
    const pitch = $("#pitch");
    const yaw = $("#yaw");
    const batt = $("#batt");
    const touch_debug = $("#tskin-touch")

    socket.on("tskin_state", function(data) {
        if (data.tskin.connected){
            conn_status.removeClass("bg-secondary").addClass("bg-success").html("Connected!")
            test_button.removeClass("disabled");
        } else {
            conn_status.removeClass("bg-success").addClass("bg-secondary").html("Connecting...")
            test_button.addClass("disabled");
        }

        roll.html(data.tskin.angle ? data.tskin.angle.roll : "");
        pitch.html(data.tskin.angle ? data.tskin.angle.pitch : "");
        yaw.html(data.tskin.angle ? data.tskin.angle.yaw : "");
        batt.html(data.tskin.battery);

        if (data.tskin.touchpad){
            touch_debug.prepend(
                $("<div/>", { html: data.tskin.touchpad.name + "(" + data.tskin.touchpad.x + ", " + data.tskin.touchpad.y + ")"})
            )
        }

        if (data.tskin.gesture){
            $("#tskin-gesture").append(
                $("<div/>", { html: data.tskin.gesture.gesture })
            )
        }

    });
</script>
{% endblock %}